[
  {
    "title": "daes",
    "url": "reference/daes.html",
    "content": "daes Aesthetics daes(x, y, ...) x, y, ...List of name value pairs giving aesthetics to map to variables. The names for x and y aesthetics are typically omitted because they are so common; all other aspects must be named. Aesthetics for the plots such as axis (x,y), group, color and/or size Aesthetics of the chart. Aesthetics Valid aesthetics (depending on the geom) x, y: cartesian coordinates. group: grouping data. subgroup: subgrouping data (for treemaps). name: name data. color: color of geom. size: size of geom. stack: TRUE or FALSE to indicate if the geom should be stacked (for bar charts). layout: \"fr\", \"kk\", or any other supported in igraph to set the geom layout (for network charts). sort: ordering hint for discrete categories. Accepts one of \"asc-x\", \"desc-x\" (sort by the numeric x/value), or \"asc-y\", \"desc-y\" (sort by the category/label). Use \"none\" to keep input order.",
    "type": "function"
  },
  {
    "title": "po_box",
    "url": "reference/po_box.html",
    "content": "po_box Boxplot po_box(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Draw a boxplot. if (interactive()) # Vertical box plot d3po(pokemon) \\%>\\% po_box(daes(x = type_1, y = weight, color = color_1)) \\%>\\% po_title(\"Weight Distribution by Type\") # Horizontal box plot d3po(pokemon) \\%>\\% po_box(daes(x = height, y = type_1, color = color_1)) \\%>\\% po_title(\"Height Distribution by Type\") # Log-transformed distribution pokemon$log_weight \\% po_box(daes(x = type_1, y = log_weight, color = color_1)) \\%>\\% po_title(\"Log(Weight) Distribution by Type\")",
    "type": "function"
  },
  {
    "title": "po_treemap",
    "url": "reference/po_treemap.html",
    "content": "po_treemap Treemap po_treemap(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot a treemap if (interactive()) dout \\% po_treemap(daes(size = count, group = type, color = color, tiling = \"squarify\")) \\%>\\% po_title(\"Share of Pokemon by main type\")",
    "type": "function"
  },
  {
    "title": "po_pie",
    "url": "reference/po_pie.html",
    "content": "po_pie Pie po_pie(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot a pie if (interactive()) dout \\% po_pie(daes( size = count, group = type, color = color, innerRadius = 0, startAngle = 0, endAngle = 2 * pi )) \\%>\\% po_title(\"Share of Pokemon by main type\")",
    "type": "function"
  },
  {
    "title": "po_donut",
    "url": "reference/po_donut.html",
    "content": "po_donut Donut po_donut(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot a donut if (interactive()) dout \\% po_donut(daes( size = count, group = type, color = color, innerRadius = 0.4, startAngle = 0, endAngle = 2 * pi )) \\%>\\% po_title(\"Share of Pokemon by main type\")",
    "type": "function"
  },
  {
    "title": "po_area",
    "url": "reference/po_area.html",
    "content": "po_area Area po_area(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot an area chart. if (interactive()) dout \\% po_area(daes( x = height, y = weight, group = type, color = color )) \\%>\\% po_title(\"Pokemon Evolution: Weight vs Height by Type\")",
    "type": "function"
  },
  {
    "title": "po_bar",
    "url": "reference/po_bar.html",
    "content": "po_bar Bar po_bar(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Draw a bar chart. if (interactive()) dout \\% po_bar(daes(x = type, y = count, color = color)) \\%>\\% po_title(\"Vertical Bars\") # Horizontal bars (flipped axes) d3po(dout) \\%>\\% po_bar(daes(x = count, y = type, color = color)) \\%>\\% po_title(\"Horizontal Bars\")",
    "type": "function"
  },
  {
    "title": "po_line",
    "url": "reference/po_line.html",
    "content": "po_line Line po_line(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot an line chart. if (interactive()) dout \\% po_line(daes( x = height, y = weight, group = type, color = color )) \\%>\\% po_title(\"Pokemon Evolution: Weight vs Height by Type\")",
    "type": "function"
  },
  {
    "title": "po_scatter",
    "url": "reference/po_scatter.html",
    "content": "po_scatter scatter po_scatter(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot an scatter chart. if (interactive()) # Unweighted scatter plot d3po(pokemon) \\%>\\% po_scatter(daes( x = height, y = weight, group = name, color = color_1 )) \\%>\\% po_title(\"Height vs Weight\") # Log-transformed scatter plot pokemon$log_height \\% po_scatter(daes( x = log_height, y = log_weight, group = name, color = color_1 )) \\%>\\% po_title(\"Log(Height) vs Log(Weight)\") # Weighted scatterplot by inverse distance from mean mean_weight \\% po_scatter(daes( x = height, y = weight, size = inverse_distance_from_mean, group = name, color = color_1 )) \\%>\\% po_title(\"Height vs Weight (Size = 1 / Distance from the Mean)\")",
    "type": "function"
  },
  {
    "title": "po_tooltip",
    "url": "reference/po_tooltip.html",
    "content": "po_tooltip Tooltip po_tooltip(d3po, template) d3poEither the output of d3po() or d3po_proxy(). template A character string template or formatter expression. Appends tooltip settings to an 'htmlwidgets' object Set a custom tooltip template for a chart. The template can be a literal string (e.g. \\name\\Value: \\value\\) which will be evaluated server-side by substituting column values.",
    "type": "function"
  },
  {
    "title": "po_format",
    "url": "reference/po_format.html",
    "content": "po_format Format po_format(d3po, ...) d3poEither the output of d3po() or d3po_proxy(). ... Named formatting expressions (as quosures). Each name should correspond to an aesthetic (e.g. x, y, tooltip, etc.). Precompute formatted label columns from expressions and attach them to the widget data. Accepts named expressions like x = round(varx, 2) or y = format(varY, big.mark = \",\"). The formatted columns are added to d3po$x$data with names __label_ and registered in d3po$x$formatted_cols for the renderer to use.",
    "type": "function"
  },
  {
    "title": "po_labels",
    "url": "reference/po_labels.html",
    "content": "po_labels Labels po_labels( d3po, x = NULL, y = NULL, title = NULL, subtitle = NULL, labels = NULL, align = \"left-top\" ) d3poEither the output of d3po() or d3po_proxy(). x Optional x-axis label. y Optional y-axis label. title Optional title for the chart. subtitle Optional subtitle for the chart. labels Optional character vector or JavaScript function for custom label fields for treemaps. align Label alignment for treemaps. Must be one of \"left-top\", \"center-middle\", or \"right-top\". Appends custom labels to an 'htmlwidgets' object Edit labels positioning in a treemap.",
    "type": "function"
  },
  {
    "title": "po_font",
    "url": "reference/po_font.html",
    "content": "po_font Font po_font(d3po, family = \"Fira Sans\", size = 16, transform = \"none\") d3poEither the output of d3po() or d3po_proxy(). family family font to use (\"Roboto\", \"Merriweather\", etc.). size size to use (10, 11, 12, etc. overrides auto-sizing). transform transformation to use for the title (\"lowercase\", \"uppercase\", \"capitalize\", \"none\"). Appends custom font to an 'htmlwidgets' object Edit the font used in a chart.",
    "type": "function"
  },
  {
    "title": "po_background",
    "url": "reference/po_background.html",
    "content": "po_background Background po_background(d3po, background = \"#fff\") d3poEither the output of d3po() or d3po_proxy(). background background to add (hex code). Appends custom background to an 'htmlwidgets' object Add a background to a chart.",
    "type": "function"
  },
  {
    "title": "po_theme",
    "url": "reference/po_theme.html",
    "content": "po_theme Theme po_theme(d3po, axis = NULL, tooltips = NULL) d3poEither the output of d3po() or d3po_proxy(). axis Hex color string for axis lines and axis/label/title fill (e.g. \"#fff\"). tooltips Hex color string for tooltip / download menu background (e.g. \"#000\"). Appends theme settings to an 'htmlwidgets' object Manually set colors used by D3po for axis/axis-labels/title and for tooltips/download menu background. This allows you to override page themes (Tabler/Shiny) and force D3po to render with readable contrast.",
    "type": "function"
  },
  {
    "title": "po_download",
    "url": "reference/po_download.html",
    "content": "po_download Download po_download(d3po, show = TRUE) d3poA 'd3po' or 'd3proxy' object. show Logical indicating whether to show (TRUE) or hide (FALSE) the download button. Appends download button settings to an 'htmlwidgets' object Show/hide the download button.",
    "type": "function"
  },
  {
    "title": "po_network",
    "url": "reference/po_network.html",
    "content": "po_network Network po_network(d3po, ..., data = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). inherit_daes Whether to inherit aesthetics previous specified. Appends nodes arguments to a network-specific 'htmlwidgets' object Draw a network graph showing relationships between entities. Requires an igraph object with nodes (vertices) and links (edges). Node size can represent counts or other metrics. if (interactive()) d3po(pokemon_network) \\%>\\% po_network(daes(size = size, color = color, layout = \"kk\")) \\%>\\% po_title(\"Pokemon Type Network\")",
    "type": "function"
  },
  {
    "title": "po_geomap",
    "url": "reference/po_geomap.html",
    "content": "po_geomap Geomap po_geomap(d3po, ..., data = NULL, map = NULL, inherit_daes = TRUE) d3poEither the output of d3po() or d3po_proxy(). ... Aesthetics, see daes(). data Any dataset to use for plot, overrides data passed to d3po(). map map to use (i.e., any valid list or topojson file such as maps$south_america$chile or jsonlite::fromJSON(\"chile.topojson\", simplifyVector = F)) inherit_daes Whether to inherit aesthetics previous specified. an 'htmlwidgets' object with the desired interactive plot Plot a geomap if (interactive()) # Get region IDs and names from the Chile map dout \\% po_geomap( daes( group = id, color = color, size = pokemon_count, tooltip = name ), map = d3po::maps$south_america$chile ) \\%>\\% po_title(\"Pokemon Distribution in Chile\")",
    "type": "function"
  },
  {
    "title": "d3po",
    "url": "reference/d3po.html",
    "content": "package d3po An htmlwidget interface to the d3po javascript chart library d3po(data = NULL, ..., width = NULL, height = NULL, elementId = NULL) datad3po need explicit specified data objects formatted as JSON, and this parameter passed it from R. ... Aesthetics to pass, see daes() width Must be a valid CSS unit (like '100\\%', '400px', 'auto') or a number, which will be coerced to a string and have 'px' appended. height Same as width parameter. elementId Dummy string parameter. Useful when you have two or more charts on the same page. Creates a basic 'htmlwidget' object for simple visualization Apache licensed alternative to 'Highcharter' which provides functions for both fast and beautiful interactive visualization for 'Markdown' and 'Shiny'. This function provides 'd3po' methods from R console Useful links: https://pacha.dev/d3po/ Report bugs at https://github.com/pachadotdev/d3po/issues Maintainer: Mauricio Vargas Sepulveda m.vargas.sepulveda@gmail.com (https://orcid.org/0000-0003-1017-7574ORCID) [copyright holder] Authors: John Coene Other contributors: Ariel Alvarado contributor Sylvain Lesage contributor Curran Kelleher contributor Fernando Becerra contributor Natural Earth [data contributor] R Consortium (Funded for the 2016-2017 ISC grants cycle) funder internal",
    "type": "function"
  }
]
